#!/usr/bin/bash
sudo yum -y install expect sshpass

cat <<'EOF' >> /root/pan-config.expect
#!/usr/bin/expect -f
set server    [lindex $argv 0]
set user      [lindex $argv 1]
set pass      [lindex $argv 2]
set serial    [lindex $argv 3]
set template  [lindex $argv 4]
set dg        [lindex $argv 5]
set privsub   [lindex $argv 6]
set privsubgw [lindex $argv 7]
set pubsub    [lindex $argv 8]
set pubsubgw  [lindex $argv 9]
set timeout -1
spawn sshpass -p "$pass" ssh -o StrictHostKeyChecking=no $user@$server 
match_max 100000
expect "$user*"
send -- "set cli pager off\r"
expect "$user*"
send -- "set serial-number $serial\r"
expect "$user*"
send -- "request license fetch\r"
expect "$user*"
send -- "configure\r"
expect "$user*"
send -- "set template $template\r"
expect "$user*"
send -- "set template-stack $template-stack templates $template settings\r"
expect "$user*"
send -- "set template-stack $template-stack auto-push-on-1st-conn yes\r"
expect "$user*"
send -- "set device-group $dg reference-templates $template-stack\r"
expect "$user*"
send -- "set deviceconfig system update-schedule threats recurring daily at 02:00\r"
expect "$user*"
send -- "set deviceconfig system update-schedule threats recurring daily action download-and-install\r"
expect "$user*"
send -- "set deviceconfig system update-schedule anti-virus recurring daily at 01:00\r"
expect "$user*"
send -- "set deviceconfig system update-schedule anti-virus recurring daily action download-and-install\r"
expect "$user*"
send -- "set deviceconfig system update-schedule wildfire recurring every-30-mins at 0\r"
expect "$user*"
send -- "set deviceconfig system update-schedule wildfire recurring every-30-mins action download-and-install\r"
expect "$user*"
send -- "set deviceconfig system timezone US/Central\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama enhanced-application-logging yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list traffic-enhanced-app-logging log-type traffic\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list traffic-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list traffic-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list threat-enhanced-app-logging log-type threat\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list threat-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list threat-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list wildfire-enhanced-app-logging log-type wildfire\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list wildfire-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list wildfire-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list url-enhanced-app-logging log-type url\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list url-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list url-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list data-enhanced-app-logging log-type data\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list data-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list data-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list tunnel-enhanced-app-logging log-type tunnel\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list tunnel-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list tunnel-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list auth-enhanced-app-logging log-type auth\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list auth-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list auth-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list decryption-enhanced-app-logging log-type decryption\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list decryption-enhanced-app-logging filter \"All Logs\"\r"
expect "$user*"
send -- "set shared log-settings profiles LogToPanorama match-list decryption-enhanced-app-logging send-to-panorama yes\r"
expect "$user*"
send -- "set template $template config  network profiles interface-management-profile HealthProbe permitted-ip 168.63.129.16/32\r"
expect "$user*"
send -- "set template $template config  network profiles interface-management-profile HealthProbe https yes\r"
expect "$user*"
send -- "set template $template config  network profiles interface-management-profile HealthProbe ssh yes\r"
expect "$user*"
send -- "set template $template config  network interface ethernet ethernet1/1 layer3 interface-management-profile HealthProbe\r"
expect "$user*"
send -- "set template $template config  network interface ethernet ethernet1/1 layer3 dhcp-client create-default-route no\r"
expect "$user*"
send -- "set template $template config  network interface ethernet ethernet1/2 layer3 interface-management-profile HealthProbe\r"
expect "$user*"
send -- "set template $template config  network interface ethernet ethernet1/2 layer3 dhcp-client create-default-route no\r"
expect "$user*"
send -- "set template $template config  vsys vsys1 import network interface \[ ethernet1/1 ethernet1/2 \]\r"
expect "$user*"
send -- "set template $template config  vsys vsys1 zone public network layer3 \[ ethernet1/1 \]\r"
expect "$user*"
send -- "set template $template config  vsys vsys1 zone private network layer3 \[ ethernet1/2 \]\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-public interface ethernet1/1\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-private interface ethernet1/2\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-public routing-table ip static-route default interface ethernet1/1\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-public routing-table ip static-route default destination 0.0.0.0/0\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-public routing-table ip static-route default nexthop ip-address $pubsubgw\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-public routing-table ip static-route private1 nexthop next-vr vr-private\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-public routing-table ip static-route private1 destination $privsub\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-private routing-table ip static-route default nexthop next-vr vr-public\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-private routing-table ip static-route default destination 0.0.0.0/0\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-private routing-table ip static-route AzureProbe nexthop ip-address $privsubgw\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-private routing-table ip static-route AzureProbe interface ethernet1/2\r"
expect "$user*"
send -- "set template $template config  network virtual-router vr-private routing-table ip static-route AzureProbe destination 168.63.129.16/32\r"
expect "$user*"
send -- "set template $template config shared log-settings system match-list LogToPanorama filter \"All Logs\"\r"
expect "$user*"
send -- "set template $template config shared log-settings system match-list LogToPanorama send-to-panorama yes\r"
expect "$user*"
send -- "set template $template config shared log-settings config match-list LogToPanorama filter \"All Logs\"\r"
expect "$user*"
send -- "set template $template config shared log-settings config match-list LogToPanorama send-to-panorama yes\r"
expect "$user*"
send -- "set template $template config shared log-settings userid match-list LogToPanorama filter \"All Logs\"\r"
expect "$user*"
send -- "set template $template config shared log-settings userid match-list LogToPanorama send-to-panorama yes\r"
expect "$user*"
send -- "set template $template config shared log-settings iptag match-list LogToPanorama filter \"All Logs\"\r"
expect "$user*"
send -- "set template $template config shared log-settings iptag match-list LogToPanorama send-to-panorama yes\r"
expect "$user*"
send -- "set template $template config shared log-settings hipmatch match-list LogToPanorama filter \"All Logs\"\r"
expect "$user*"
send -- "set template $template config shared log-settings hipmatch match-list LogToPanorama send-to-panorama yes\r"
expect "$user*"
send -- "set template $template config shared log-settings globalprotect match-list LogToPanorama filter \"All Logs\"\r"
expect "$user*"
send -- "set template $template config shared log-settings globalprotect match-list LogToPanorama send-to-panorama yes\r"
expect "$user*"
send -- "set template $template config  deviceconfig system update-schedule threats recurring daily at 01:00\r"
expect "$user*"
send -- "set template $template config  deviceconfig system update-schedule threats recurring daily action download-and-install\r"
expect "$user*"
send -- "set template $template config  deviceconfig system update-schedule threats recurring sync-to-peer yes\r"
expect "$user*"
send -- "set template $template config  deviceconfig system update-schedule anti-virus recurring daily at 02:00\r"
expect "$user*"
send -- "set template $template config  deviceconfig system update-schedule anti-virus recurring daily action download-and-install\r"
expect "$user*"
send -- "set template $template config  deviceconfig system update-schedule anti-virus recurring sync-to-peer yes\r"
expect "$user*"
send -- "set template $template config  deviceconfig system update-schedule wildfire recurring real-time\r"
expect "$user*"
send -- "set template $template config  deviceconfig system timezone US/Central\r"
expect "$user*"
send -- "set template $template config  deviceconfig setting ctd x-forwarded-for 1\r"
expect "$user*"
send -- "set template $template config  deviceconfig setting wildfire report-grayware-file yes\r"
expect "$user*"
send -- "set template $template config  deviceconfig setting management enable-log-high-dp-load yes\r"
expect "$user*"
send -- "set template $template settings default-vsys vsys1\r"
expect "$user*"
send -- "set template-stack $template-stack settings default-vsys vsys1\r"
expect "$user*"
send -- "set device-group $dg address AzureHealthProbe ip-netmask 168.63.129.16/32\r"
expect "$user*"
send -- "set device-group $dg profile-group DefaultSecurityGroup virus default\r"
expect "$user*"
send -- "set device-group $dg profile-group DefaultSecurityGroup spyware default\r"
expect "$user*"
send -- "set device-group $dg profile-group DefaultSecurityGroup vulnerability default\r"
expect "$user*"
send -- "set device-group $dg profile-group DefaultSecurityGroup wildfire-analysis default\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" to any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" from \[ private public \]\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" source AzureHealthProbe\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" destination any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" application any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" service service-https\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" action allow\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" log-start no\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" log-end no\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Azure Monitoring\" log-setting LogToPanorama\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" profile-setting group DefaultSecurityGroup\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" to public\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" from public\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" source $pubsub\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" destination any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" application any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" service any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" action allow\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Outside to Internet\" log-setting LogToPanorama\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" profile-setting group DefaultSecurityGroup\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" to public\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" from private\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" source any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" destination any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" application any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" service any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" action allow\r"
expect "$user*"
send -- "set device-group $dg post-rulebase security rules \"Private to Public\" log-setting LogToPanorama\r"
expect "$user*"
send -- "set device-group $dg post-rulebase nat rules \"Private to Public\" source-translation dynamic-ip-and-port interface-address interface ethernet1/1\r"
expect "$user*"
send -- "set device-group $dg post-rulebase nat rules \"Private to Public\" to public\r"
expect "$user*"
send -- "set device-group $dg post-rulebase nat rules \"Private to Public\" from private\r"
expect "$user*"
send -- "set device-group $dg post-rulebase nat rules \"Private to Public\" source any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase nat rules \"Private to Public\" destination any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase nat rules \"Private to Public\" service any\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules intrazone-default action deny\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules intrazone-default log-start yes\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules intrazone-default log-end no\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules intrazone-default log-setting LogToPanorama\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules interzone-default action deny\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules interzone-default log-start yes\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules interzone-default log-end no\r"
expect "$user*"
send -- "set device-group $dg post-rulebase default-security-rules rules interzone-default log-setting LogToPanorama\r"
expect "$user*"
send -- "commit\r"
expect "$user*"
send -- "exit\n"
expect "$user*"
send -- "exit\n"
expect { send "exit\n" }
exit
EOF

chmod 755 /root/pan-config.expect
/root/pan-config.expect ${PANORAMA_IP} ${PANORAMA_USER} ${PANORAMA_PASS} ${PANORAMA_SERIAL} ${TPLNAME} ${DGNAME} ${PRIVATE_SUB} ${PRIVATE_SUB_GW} ${PUBLIC_SUB} ${PUBLIC_SUB_GW}